<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Unit & Image Converter</title>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background: linear-gradient(to bottom right, #4facfe, #00f2fe);
      color: #333;
      padding: 20px;
    }

    .container {
      max-width: 800px;
      margin: auto;
      background: #fff;
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.2);
    }

    h1 {
      text-align: center;
      color: #333;
    }

    .tool-section {
      margin-top: 30px;
    }

    label {
      font-weight: bold;
      display: block;
      margin-top: 10px;
    }

    select, input, button {
      width: 100%;
      padding: 10px;
      margin-top: 5px;
      border-radius: 8px;
      border: 1px solid #ccc;
    }

    button {
      background: #00c6ff;
      color: #fff;
      font-weight: bold;
      cursor: pointer;
    }

    button:hover {
      background: #0072ff;
    }

    .output {
      margin-top: 15px;
      font-size: 1.1em;
      font-weight: bold;
    }

    .image-preview {
      max-width: 100%;
      margin-top: 10px;
      border: 2px dashed #ccc;
      border-radius: 10px;
    }

    @media (max-width: 600px) {
      .container {
        padding: 15px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Unit & Image Converter</h1>

    <!-- Unit Converter -->
    <div class="tool-section">
      <h2>Unit Converter</h2>
      <label for="unitType">Select Unit Type:</label>
      <select id="unitType">
        <option value="length">Length</option>
        <option value="weight">Weight</option>
        <option value="temperature">Temperature</option>
      </select>

      <label for="fromUnit">From:</label>
      <select id="fromUnit"></select>

      <label for="toUnit">To:</label>
      <select id="toUnit"></select>

      <label for="inputValue">Value:</label>
      <input type="number" id="inputValue" placeholder="Enter value" />

      <button onclick="convertUnit()">Convert</button>

      <div class="output" id="unitOutput"></div>
    </div>

    <!-- Image Converter -->
    <div class="tool-section">
      <h2>Image Format Converter</h2>
      <label for="imageUpload">Upload Image:</label>
      <input type="file" id="imageUpload" accept="image/*" />

      <img id="previewImage" class="image-preview" style="display:none;" />

      <label for="imageFormat">Convert To:</label>
      <select id="imageFormat">
        <option value="image/png">PNG</option>
        <option value="image/jpeg">JPG</option>
        <option value="image/webp">WEBP</option>
      </select>

      <button onclick="convertImage()">Convert & Download</button>
    </div>
  </div>

  <script>
    const unitData = {
      length: { m: 1, km: 0.001, cm: 100, mm: 1000, ft: 3.28084, in: 39.3701 },
      weight: { kg: 1, g: 1000, lb: 2.20462, oz: 35.274 },
      temperature: ["Celsius", "Fahrenheit", "Kelvin"]
    };

    function populateUnits() {
      const unitType = document.getElementById("unitType").value;
      const from = document.getElementById("fromUnit");
      const to = document.getElementById("toUnit");
      from.innerHTML = "";
      to.innerHTML = "";

      if (unitType === "temperature") {
        unitData.temperature.forEach(unit => {
          from.innerHTML += `<option value="${unit}">${unit}</option>`;
          to.innerHTML += `<option value="${unit}">${unit}</option>`;
        });
      } else {
        for (let unit in unitData[unitType]) {
          from.innerHTML += `<option value="${unit}">${unit}</option>`;
          to.innerHTML += `<option value="${unit}">${unit}</option>`;
        }
      }
    }

    document.getElementById("unitType").addEventListener("change", populateUnits);
    populateUnits();

    function convertUnit() {
      const type = document.getElementById("unitType").value;
      const from = document.getElementById("fromUnit").value;
      const to = document.getElementById("toUnit").value;
      const value = parseFloat(document.getElementById("inputValue").value);
      let result;

      if (isNaN(value)) {
        document.getElementById("unitOutput").innerText = "Please enter a valid number.";
        return;
      }

      if (type === "temperature") {
        if (from === to) result = value;
        else if (from === "Celsius") result = to === "Fahrenheit" ? value * 9/5 + 32 : value + 273.15;
        else if (from === "Fahrenheit") result = to === "Celsius" ? (value - 32) * 5/9 : (value - 32) * 5/9 + 273.15;
        else if (from === "Kelvin") result = to === "Celsius" ? value - 273.15 : (value - 273.15) * 9/5 + 32;
      } else {
        const base = value / unitData[type][from];
        result = base * unitData[type][to];
      }

      document.getElementById("unitOutput").innerText = `Result: ${result.toFixed(2)} ${to}`;
    }

    // Image Conversion
    let originalImage;

    document.getElementById("imageUpload").addEventListener("change", function () {
      const file = this.files[0];
      if (!file) return;
      const reader = new FileReader();
      reader.onload = function (e) {
        originalImage = new Image();
        originalImage.onload = function () {
          document.getElementById("previewImage").src = e.target.result;
          document.getElementById("previewImage").style.display = "block";
        };
        originalImage.src = e.target.result;
      };
      reader.readAsDataURL(file);
    });

    function convertImage() {
      if (!originalImage) {
        alert("Please upload an image first.");
        return;
      }

      const format = document.getElementById("imageFormat").value;
      const canvas = document.createElement("canvas");
      canvas.width = originalImage.width;
      canvas.height = originalImage.height;
      const ctx = canvas.getContext("2d");
      ctx.drawImage(originalImage, 0, 0);

      canvas.toBlob(function (blob) {
        const link = document.createElement("a");
        link.href = URL.createObjectURL(blob);
        link.download = `converted.${format.split('/')[1]}`;
        link.click();
      }, format, 0.8); // compression: 0.8
    }
  </script>
</body>
</html>
